apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace:  {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.deployment.scaling.minReplicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  strategy:
    {{ if .Values.deployment.strategy.isRolling }}
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    {{ else }}
    type: Recreate
    {{ end }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      {{ if .Values.appdynamics.enabled}}
      volumes:
        - name: appd-agent-repo
          emptyDir:
            medium: Memory
      {{- end }}
      imagePullSecrets:
        - name: gitlab-registry-fnb-read
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.registry.url }}/{{ .Values.registry.projectNamespace }}/{{ .Values.registry.project }}/{{ .Values.registry.project }}:{{ .Values.imageTag }}"
          imagePullPolicy: Always
          ports:
            {{- range $key, $val := .Values.deployment.ports }}
            - name: {{ $key }}
              containerPort: {{ $val.containerPort }}
              protocol: {{ $val.protocol | quote }}
            {{- end }}
          # Be sure that liveliness/readiness probes are enabled in spring actuator endpoints, checkout spring cloud kubernetes
          livenessProbe:
            initialDelaySeconds: 369
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 3
            httpGet:
             scheme: {{ .Values.deployment.livenessProbe.httpGet.scheme }}
             port: {{ .Values.deployment.livenessProbe.httpGet.port }}
             path: {{ .Values.deployment.livenessProbe.httpGet.path }}
          readinessProbe:
            initialDelaySeconds: 80
            failureThreshold: 22
            periodSeconds: 10
            timeoutSeconds: 3
            httpGet:
              scheme: {{ .Values.deployment.livenessProbe.httpGet.scheme }}
              port: {{ .Values.deployment.readinessProbe.httpGet.port}}
              path: {{ .Values.deployment.readinessProbe.httpGet.path }}
          resources:
            limits:
              cpu: {{ .Values.build.resources.limits.cpu }}
              memory: {{ .Values.build.resources.limits.memory }}
            requests:
              cpu: {{ .Values.build.resources.requests.cpu }}
              memory: {{ .Values.build.resources.requests.memory }}
          env:
            {{- range $key, $val := .Values.deployment.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
            - name: adminServiceUser
              valueFrom:
                secretKeyRef:
                  name: hr-integration-shared-secret
                  key: adminServiceUser
            - name: adminServicePassword
              valueFrom:
                secretKeyRef:
                  name: hr-integration-shared-secret
                  key: adminServicePassword
            - name: adminNotifyMailFrom
              valueFrom:
                secretKeyRef:
                  name: spring-boot-admin-secret
                  key: adminNotifyMailFrom
            - name: adminNotifyMailTo
              valueFrom:
                secretKeyRef:
                  name: spring-boot-admin-secret
                  key: adminNotifyMailTo
            - name: smtpHost
              valueFrom:
                secretKeyRef:
                  name: spring-boot-admin-secret
                  key: smtpHost
            - name: smtpPort
              valueFrom:
                secretKeyRef:
                  name: spring-boot-admin-secret
                  key: smtpPort
            - name: smtpUsername
              valueFrom:
                secretKeyRef:
                  name: spring-boot-admin-secret
                  key: smtpUsername
            - name: smtpPassword
              valueFrom:
                secretKeyRef:
                  name: spring-boot-admin-secret
                  key: smtpPassword
            - name: smtpFromAddress
              valueFrom:
                secretKeyRef:
                  name: spring-boot-admin-secret
                  key: smtpFromAddress
          {{ if .Values.appdynamics.enabled}}
          envFrom:
            - configMapRef:
                name: {{ .Chart.Name }}-appdynamics-configuration
                optional: true
          volumeMounts:
            - mountPath: /opt/appdynamics
              name: appd-agent-repo
          {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      {{ if .Values.appdynamics.enabled }}
      initContainers:
        - name: appdynamics-java-agent
          image: appdynamics/java-agent:21.11.2
          imagePullPolicy: Always
          command:
            - cp
            - -ra
            - /opt/appdynamics/.
            - /opt/temp/
          resources:
            limits:
              cpu: 500m
              memory: 100M
            requests:
              cpu: 100m
              memory: 50M
          volumeMounts:
            - mountPath: /opt/temp
              name: appd-agent-repo
      {{- end }}
